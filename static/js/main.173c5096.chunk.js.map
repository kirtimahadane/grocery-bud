{"version":3,"sources":["Alert.js","List.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","type","msg","removeAlert","useEffect","timeOut","setTimeout","clearTimeout","className","List","items","removeItem","editItem","map","item","id","title","onClick","size","App","useState","name","setName","localStorage","getItem","JSON","parse","list","setList","isEditing","setIsEditing","editID","setEditID","show","alert","SetAlert","showAlert","setItem","stringify","onSubmit","e","preventDefault","newItem","Date","getTime","toString","placeholder","value","onChange","target","length","filter","specificItem","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.173c5096.chunk.js","sourcesContent":["import React,{useEffect} from 'react'\r\n\r\nconst Alert = ({type, msg, removeAlert}) => {\r\n  useEffect(()=>{\r\n  const timeOut= setTimeout(()=>{\r\nremoveAlert()\r\n  },2000)\r\n  return ()=>clearTimeout(timeOut);\r\n  },[])\r\n\r\n  return (\r\n    <div>\r\n      <p className={`alert alert-${type}`}>{msg}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\nimport{ FaEdit, FaTrash} from 'react-icons/fa'\r\nconst List = ({items, removeItem, editItem }) => {\r\n  return (\r\n    <div className=\"grocery-list\">\r\n     {items.map(item=>{\r\n       const{id, title}=item;\r\n       return <article key={id} className=\"grocery-item\">\r\n         <p className=\"title\">{title}</p>\r\n         <div className=\"btn-container\">\r\n           <button  type=\"button\" className=\"edit-btn\"  onClick={()=>editItem(id)}>\r\n             <FaEdit size=\"1.4rem\" />\r\n           </button>\r\n           <button type=\"button\" className=\"delete-btn\" onClick={()=> removeItem(id)}>\r\n             <FaTrash size=\"1.4rem\"/>\r\n           </button>\r\n         </div>\r\n       </article>\r\n     })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default List\r\n","import React,{useEffect, useState} from 'react'\nimport Alert from './Alert'\nimport List from './List'\nconst getLocalStorage= ()=>{\n  let list= localStorage.getItem(\"list\");\n  if(list){\n    return JSON.parse(localStorage.getItem(\"list\"));\n  }else{\n    return [];\n  }\n}\nconst App = () => {\n  const [name, setName]=useState(\"\");\n  const [list, setList]= useState(getLocalStorage());\n  const [isEditing, setIsEditing]= useState(false);\n  const[editID, setEditID]= useState(null);\n  const[alert, SetAlert]= useState({\n    show:false,\n    msg:\"\",\n    type:\"\"\n  })\n  const handleSubmit=(e)=>{\n    e.preventDefault();\n    if(!name){\n      // show alert\n      showAlert(true, \"Please enter value\", \"danger\")\n    }\n    else if(name && isEditing){\n      setList(list.map(item=>{\n        if(item.id === editID){\n          return{...item, title:name}\n        }\n        return item;\n      }))\n      setName(\"\");\n      setEditID(null);\n      setIsEditing(false);\n      showAlert(true,\"Value changed\", \"success\")\n    }\n    else{\n     showAlert(true, \"Item Added\", \"success\")\n      const newItem= {\n        id:new Date().getTime().toString(),\n        title:name\n      }\n\n      setList([...list, newItem])\n      setName(\"\")\n    }\n  }\n  const showAlert=(show=false, msg=\"\", type=\"\")=>{\n    SetAlert({show, msg, type})\n  }\n  const clearList=()=>{\n    showAlert(true, \"Empty List\", \"danger\");\n    setList([]);\n  }\n  const removeItem=(id)=>{\n    setList(list.filter(item=> item.id !==id));\n    showAlert(true, \"Item removed\", \"danger\")\n  }\n\n  const editItem=(id)=>{\nconst specificItem= list.find(item=>item.id ===id)\n    setIsEditing(true);\n    setEditID(id);\n    setName(specificItem.title)\n    \n  }\n  useEffect(()=>{\n    localStorage.setItem('list', JSON.stringify(list));\n  },[list])\n  \n    \n\n  return (\n    <section className=\"section-center\">\n      <form className=\"grocery-form\" onSubmit={handleSubmit}>\n        {alert.show && <Alert {...alert} removeAlert={showAlert} />}\n        <h3>Grocery Bud</h3>\n        <div className=\"form-control\">\n          <input type=\"text\" className=\"grocery\"\n          placeholder=\"eg. Eggs\"\n          value={name}\n          onChange={(e)=>setName(e.target.value)}\n           />\n           <button className=\"submit-btn\" type=\"submit\">\n             {isEditing? \"Edit\":\"Submit\"}\n           </button>\n        </div>\n      </form>\n      {list.length>0 && <div className=\"grocery-container\">\n      <List items={list} removeItem={removeItem} editItem={editItem}/>\n      <button className=\"clear-btn\" onClick={clearList}> Clear items</button>\n    </div>\n      }\n    \n    </section>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}